networks:
  hara-local-containers:
    driver: bridge

services:
  api:
    build:
      context: ../../
      dockerfile: app/Dockerfile
    container_name: heart-attack-prediction-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://alloy:4317
      - SERVICE_NAME=heart-attack-prediction-service
      - METRIC_PORT=8081
    networks:
      - hara-local-containers
    ports:
      - "8080:30000"
      - "8081:8081"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  client_app:
    build:
      context: ../../client/
      dockerfile: Dockerfile
    container_name: heart-attack-prediction-client
    environment:
      - API_URL=http://heart-attack-prediction-api:30000/predict
      - SLEEP_INTERVAL=10
    networks:
      - hara-local-containers
    restart: unless-stopped
    depends_on:
      - api

  alloy:
    image: grafana/alloy:v1.8.2
    container_name: alloy
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["run", "--server.http.listen-addr=0.0.0.0:12345", "--storage.path=/var/lib/alloy/data", "/etc/alloy/config.alloy"]
    ports:
      - "12345:12345"
    networks:
      - hara-local-containers

  loki:
    image: grafana/loki:3.5.0
    container_name: loki
    volumes:
      - ./config/loki-local-config.yml:/etc/loki/local-config.yml:ro
      - ./config/loki-data:/loki
    command: ["-config.file=/etc/loki/local-config.yml"]
    ports:
      - "3100:3100"
    networks:
      - hara-local-containers

  memcached:
    image: memcached:1.6.38
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - hara-local-containers
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use

  tempo:
    image: grafana/tempo:2.7.2
    container_name: tempo
    volumes:
      - ./config/tempo.yml:/etc/tempo.yml
      - ./config/tempo-data:/var/tempo
    command: ["-config.file=/etc/tempo.yml"]
    ports:
      - 3200:3200
    networks:
      - hara-local-containers
    depends_on:
      - memcached

  prometheus:
    image: prom/prometheus:v3.3.0
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/prometheus-data:/prometheus
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - hara-local-containers

  grafana:
    image: grafana/grafana:11.6.1
    container_name: grafana
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/service-dashboards:/var/lib/grafana/dashboards
      - ./config/grafana-data:/var/libb/grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    networks:
      - hara-local-containers

volumes:
  tempo-data:
  loki-data:
  grafana-data:
  prometheus-data:
